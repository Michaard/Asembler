$ NOMOD51
$ INCLUDE (8051_mgraniczka.MCU)
LCDRC EQU 0FF82h
LCDWC EQU 0FF80h
LCDWD EQU 0FF81h
T0_VAL EQU (65535-46080)
TL0_VAL EQU (T0_VAL mod 256)
TH0_VAL EQU (T0_VAL/256)
CSDS EQU 0FF30h

ORG 0000h
_RESET:
	LJMP _INIT

ORG 0Bh
_INT_T0:
	ORL TL0,#TL0_VAL
	MOV TH0,#TH0_VAL
	INC _COUNTER
	RETI	

ORG 0100h
_INIT:
	MOV TL0,#TL0_VAL
	MOV TH0,#TH0_VAL
	ANL TCON,#11001111b
	ANL TMOD,#11110001b
	ORL TMOD,#00000001b
	ORL IE,#10000010b
	ORL TCON,#00010000b
	
	MOV _COUNTER,#0d

	MOV _COMMAND,#00000001b         ;clear display
	LCALL _SEND_COMMAND_TO_LCD
	MOV _COMMAND,#00111000b         ;8bit danych, 2 linie, czcionka 5x10
	LCALL _SEND_COMMAND_TO_LCD
	MOV _COMMAND,#00001111b			;wysw. ON, cursor ON i miganie
	LCALL _SEND_COMMAND_TO_LCD
	MOV _COMMAND,#00000111b         ;automatyczna inkrementacja adresu danej i podazanie kursora
	LCALL _SEND_COMMAND_TO_LCD
	
	MOV R7,#0d
_PRINT:
	MOV DPTR,#_STRING
	MOV A,R7
	MOVC A,@A+DPTR

	MOV _DATA,A
	LCALL _SEND_DATA_TO_LCD
	
	INC R7
	CJNE R7,#39d,_PRINT
_LOOP:
	MOV A,_COUNTER
	CJNE A,#10d,_CD
	MOV _COUNTER,#0d
	MOV _COMMAND,#00011000b		;przesun wysw. w lewo
	LCALL _SEND_COMMAND_TO_LCD
_CD:
	LJMP _LOOP

_WAIT_LCD_AV:
	MOV DPTR,#LCDRC
	MOVX A,@DPTR
	MOV ACC,A
	JNB ACC.7,_AV
	JMP _WAIT_LCD_AV
_AV:
	RET

_SEND_COMMAND_TO_LCD:
	LCALL _WAIT_LCD_AV
	MOV DPTR,#LCDWC
	MOV A,_COMMAND
	MOVX @DPTR,A
	RET

_SEND_DATA_TO_LCD:
	LCALL _WAIT_LCD_AV
	MOV DPTR,#LCDWD
	MOV A,_DATA
	MOVX @DPTR,A
	RET

_STRING:
	DB 65	;A
	DB 117	;u
	DB 116	;t
	DB 111	;o
	DB 114	;r
	DB 101	;e
	DB 109	;m
	DB 32	;_
	DB 112	;p
	DB 114	;r
	DB 111	;o
	DB 103	;g
	DB 114	;r
	DB 97	;a
	DB 109	;m
	DB 117	;u
	DB 32	;_
	DB 106	;j
	DB 101	;e
	DB 115	;s
	DB 116	;t
	DB 58	;:
	DB 32	;_
	DB 77	;M
	DB 105 	;i
	DB 99 	;c
	DB 104 	;h
	DB 97 	;a
	DB 108	;l
	DB 32	;_
	DB 71 	;G
	DB 114 	;r
	DB 97 	;a
	DB 110 	;n
	DB 105 	;i
	DB 99 	;c
	DB 122 	;z
	DB 107 	;k
	DB 97 	;a

END